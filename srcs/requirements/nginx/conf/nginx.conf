# Main nginx configuration

# Events block
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # === HTTPS Server Block for WordPress ===
    server {
        listen 443 ssl;
        server_name rlane.42.fr;

        # SSL Configuration
        ssl_certificate     /etc/nginx/ssl/rlane.42.fr.crt;
        ssl_certificate_key /etc/nginx/ssl/rlane.42.fr.key;

        # WordPress root directory
        root /var/www/html;
        index index.php index.html;

        # Handle PHP files
        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass wordpress:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        # Handle other requests
        location / {
            try_files $uri $uri/ /index.php?$args;
        }
    }

    # === HTTPS Server Block for Static Website ===
    server {
        listen 443 ssl;
        server_name static.42.fr;

        # SSL Configuration
        ssl_certificate     /etc/nginx/ssl/static.42.fr.crt;
        ssl_certificate_key /etc/nginx/ssl/static.42.fr.key;

        # Static files root directory
        root /var/www/static;
        index index.html;

        # Enable autoindex for debugging
        autoindex on;

        # Handle static file requests
        location / {
            try_files $uri $uri/ =404;
            # Add proper headers
            add_header Cache-Control "no-cache";
            # Enable debugging headers
            add_header X-Debug-Path $document_root;
            add_header X-Debug-URI $uri;
        }
    }

    # === HTTPS Server Block for Adminer ===
    server {
        listen 443 ssl;
        server_name adminer.42.fr;

        ssl_certificate     /etc/nginx/ssl/adminer.42.fr.crt;
        ssl_certificate_key /etc/nginx/ssl/adminer.42.fr.key;

        location / {
            proxy_pass http://adminer:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # === HTTPS Server Block for TinyAPI ===
    server {
        listen 443 ssl;
        server_name tinyapi.42.fr;

        ssl_certificate     /etc/nginx/ssl/tinyapi.42.fr.crt;
        ssl_certificate_key /etc/nginx/ssl/tinyapi.42.fr.key;

        location / {
            proxy_pass http://tinyapi:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # === HTTP to HTTPS Redirect ===
    server {
        listen 80;
        server_name rlane.42.fr static.42.fr adminer.42.fr tinyapi.42.fr;
        return 301 https://$server_name$request_uri;
    }
}
